events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name self-testnet.dozer.finance;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name self-testnet.dozer.finance;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Common proxy headers
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        # Root location - should be last
        location / {
            proxy_pass http://root:9000;
        }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream supabase {
        server 172.17.0.1:3000;
    }

    upstream kong {
        server 172.17.0.1:8000;
    }


    server {
        listen 443;
        server_name supabase.dozer.finance;
        ssl_certificate "/etc/nginx/ssl/fullchain_supabase.pem";
        ssl_certificate_key "/etc/nginx/ssl/privkey_supabase.pem";

        # REST
        location ~ ^/rest/v1/(.*)$ {
            proxy_set_header Host $host;
            proxy_pass http://kong;
            proxy_redirect off;
        }

        # AUTH
        location ~ ^/auth/v1/(.*)$ {
            proxy_set_header Host $host;
            proxy_pass http://kong;
            proxy_redirect off;
        }

        # REALTIME
        location ~ ^/realtime/v1/(.*)$ {
            proxy_redirect off;
            proxy_pass http://kong;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        # STUDIO
        location / {
            proxy_set_header Host $host;
            proxy_pass http://kong;
            proxy_redirect off;
            proxy_set_header Upgrade $http_upgrade;
        }
    }
}