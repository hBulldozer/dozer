user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Add resolver for Docker DNS
    resolver 127.0.0.11 valid=30s ipv6=off;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # SSL configuration
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;


    server {
        listen 80;
        server_name self-testnet.dozer.finance;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name self-testnet.dozer.finance;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Increase proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        location / {
            set $upstream_root http://root:9000;
            proxy_pass $upstream_root;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

	    proxy_cache my_cache;
	    proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
	    proxy_cache_valid 200 60m;
	    proxy_cache_valid 404 1m;
	    add_header X-Cache-Status $upstream_cache_status;
        }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream supabase {
        server 172.17.0.1:3000;
    }

    upstream kong {
        server 172.17.0.1:8000;
    }


    server {
        listen 443;
        server_name supabase.dozer.finance;
        ssl_certificate "/etc/nginx/ssl/fullchain_supabase.pem";
        ssl_certificate_key "/etc/nginx/ssl/privkey_supabase.pem";

        # REST
        location ~ ^/rest/v1/(.*)$ {
            proxy_set_header Host $host;
            proxy_pass http://kong;
            proxy_redirect off;
        }

        # AUTH
        location ~ ^/auth/v1/(.*)$ {
            proxy_set_header Host $host;
            proxy_pass http://kong;
            proxy_redirect off;
        }

        # REALTIME
        location ~ ^/realtime/v1/(.*)$ {
            proxy_redirect off;
            proxy_pass http://kong;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        # STUDIO
        location / {
            proxy_set_header Host $host;
            proxy_pass http://kong;
            proxy_redirect off;
            proxy_set_header Upgrade $http_upgrade;
        }
    }


}