name: Testnet Deployment

on:
  push:
    branches: [ testnet ]
  pull_request:
    branches: [ testnet ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build apps
        run: |
          docker build --target builder -t builder .

      - name: Create root image
        run: |
          docker build --target root-runner -t ghcr.io/hbulldozer/dozer/root-app-testnet:latest .

      - name: Create swap image
        run: |
          docker build --target swap-runner -t ghcr.io/hbulldozer/dozer/swap-app-testnet:latest .

      - name: Create earn image
        run: |
          docker build --target earn-runner -t ghcr.io/hbulldozer/dozer/earn-app-testnet:latest .

      - name: Push images
        run: |
          docker push ghcr.io/hbulldozer/dozer/root-app-testnet:latest
          docker push ghcr.io/hbulldozer/dozer/swap-app-testnet:latest
          docker push ghcr.io/hbulldozer/dozer/earn-app-testnet:latest

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   environment: testnet
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Create SSH key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
  #         chmod 600 ~/.ssh/deploy_key
  #         ssh-keyscan ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

  #     - name: Deploy to VM
  #       run: |
  #         # Create temporary .env file
  #         echo "${{ secrets.ENV_FILE }}" > .env

  #         # Copy configuration files
  #         scp -i ~/.ssh/deploy_key docker-compose.prod.yml ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/docker-compose.yml
  #         scp -i ~/.ssh/deploy_key nginx.conf ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/nginx.conf
  #         scp -i ~/.ssh/deploy_key .env ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/.env

  #         # Remove temporary .env file
  #         rm .env

  #         ssh -i ~/.ssh/deploy_key ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} "
  #           # Login to registry
  #           echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #           # Pull latest images
  #           docker pull ghcr.io/hbulldozer/dozer/root-app-testnet:latest
  #           docker pull ghcr.io/hbulldozer/dozer/swap-app-testnet:latest
  #           docker pull ghcr.io/hbulldozer/dozer/earn-app-testnet:latest

  #           # Restart containers
  #           docker compose down
  #           docker compose up -d
  #         "