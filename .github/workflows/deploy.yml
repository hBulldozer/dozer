name: GCP Testnet Deployment

on:
  push:
    branches: [ gcp-testnet ]
  pull_request:
    branches: [ gcp-testnet ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "${{ secrets.GCP_ENV_FILE }}" > .env
          # Debug: Check if file exists and has content (without showing values)
          echo "Debug: Checking .env file"
          ls -la .env
          echo "Number of lines in .env:"
          wc -l .env
          echo "Env variable names (hiding values):"
          cat .env | sed 's/=.*/=***/'

      - name: Set up Docker Buildx
        uses: docker/build-push-action@v3

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCP
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
          
      - name: Cache for Turbo
        uses: rharkor/caching-for-turbo@v1.5

      - name: Build and push root image
        id: build-root
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dozer/root-app:${{ github.sha }}
          target: root-runner
          secrets: |
            "env=./.env"

      - name: Build and push swap image
        id: build-swap
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dozer/swap-app:${{ github.sha }}
          target: swap-runner
          secrets: |
            "env=./.env"

      - name: Build and push earn image
        id: build-earn
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dozer/earn-app:${{ github.sha }}
          target: earn-runner
          secrets: |
            "env=./.env"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Prepare env files
        run: |
          # Create base env file from GCP environment variables
          echo "${{ secrets.GCP_ENV_FILE }}" > .env
          
          # Create service-specific env files
          cp .env swap.env
          cp .env earn.env
          cp .env root.env

      # Deploy swap app
      - name: Deploy swap app to Cloud Run
        id: deploy-swap
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: swap-app
          image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dozer/swap-app:${{ github.sha }}
          region: ${{ secrets.GCP_REGION }}
          env_vars_file: swap.env
          flags: --allow-unauthenticated

      # Deploy earn app
      - name: Deploy earn app to Cloud Run
        id: deploy-earn
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: earn-app
          image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dozer/earn-app:${{ github.sha }}
          region: ${{ secrets.GCP_REGION }}
          env_vars_file: earn.env
          flags: --allow-unauthenticated

      # Update root env with URLs and deploy
      - name: Update root URLs
        run: |
          echo "ROOT_URL=https://gcp-testnet.dozer.finance" >> root.env
          echo "SWAP_URL=${{ steps.deploy-swap.outputs.url }}" >> root.env
          echo "EARN_URL=${{ steps.deploy-earn.outputs.url }}" >> root.env

      - name: Deploy root app to Cloud Run
        id: deploy-root
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: root-app
          image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dozer/root-app:${{ github.sha }}
          region: ${{ secrets.GCP_REGION }}
          env_vars_file: root.env
          flags: --allow-unauthenticated

      - name: Show URLs
        run: |
          echo "Root app URL: ${{ steps.deploy-root.outputs.url }}"
          echo "Swap app URL: ${{ steps.deploy-swap.outputs.url }}"
          echo "Earn app URL: ${{ steps.deploy-earn.outputs.url }}"