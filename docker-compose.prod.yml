services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - root
      - swap
      - earn
    networks:
      - app-network
    restart: unless-stopped

  root:
    image: ${ROOT_IMAGE:-ghcr.io/hbulldozer/dozer/root-app-testnet}:latest
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=9000
      - HOSTNAME=0.0.0.0
    ports:
      - "9000:9000"
    networks:
      - app-network
    restart: unless-stopped
    # Add logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Add command to enable more verbose Node.js logging
    command: ["node", "--trace-warnings", "apps/_root/server.js"]

  swap:
    image: ${SWAP_IMAGE:-ghcr.io/hbulldozer/dozer/swap-app-testnet}:latest
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=9001
      - HOSTNAME=0.0.0.0
    ports:
      - "9001:9001"
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["node", "--trace-warnings", "apps/swap/server.js"]

  earn:
    image: ${EARN_IMAGE:-ghcr.io/hbulldozer/dozer/earn-app-testnet}:latest
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=9002
      - HOSTNAME=0.0.0.0
    ports:
      - "9002:9002"
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["node", "--trace-warnings", "apps/earn/server.js"]

networks:
  app-network:
    name: app-network
    driver: bridge